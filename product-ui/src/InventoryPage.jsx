import React, { useState, useEffect } from "react";
import axios from "axios";

const PRODUCT_API_URL = "http://localhost:4000/api/inventory/products"; // API l·∫•y s·∫£n ph·∫©m
const IMPORT_API_URL = "http://localhost:4000/api/inventory/import"; // API nh·∫≠p h√†ng

export default function InventoryUI() {
    const [products, setProducts] = useState([]);
    const [productId, setProductId] = useState("");
    const [quantity, setQuantity] = useState(0);
    const [stockInfo, setStockInfo] = useState(null);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState("");

    useEffect(() => {
        fetchProducts();
    }, []);

    // üü¢ L·∫•y danh s√°ch s·∫£n ph·∫©m (g·ªìm c·∫£ stock)
    const fetchProducts = async () => {
        try {
            setLoading(true);
            const res = await axios.get(PRODUCT_API_URL);
            setProducts(res.data);
        } catch (err) {
            setError("Kh√¥ng th·ªÉ t·∫£i danh s√°ch s·∫£n ph·∫©m");
        } finally {
            setLoading(false);
        }
    };

    // üü† Ki·ªÉm tra t·ªìn kho
    const checkStock = () => {
        if (!productId) {
            setError("Vui l√≤ng ch·ªçn s·∫£n ph·∫©m");
            return;
        }
        const product = products.find((p) => p._id === productId);
        setStockInfo(product ? { inStock: product.stock > 0, quantity: product.stock } : null);
    };

    // üü¢ Nh·∫≠p h√†ng (tƒÉng stock)
    const handleImportStock = async () => {
        if (!productId || quantity <= 0) {
            setError("Vui l√≤ng ch·ªçn s·∫£n ph·∫©m v√† nh·∫≠p s·ªë l∆∞·ª£ng h·ª£p l·ªá");
            return;
        }

        try {
            setLoading(true);
            await axios.post(IMPORT_API_URL, { productId, quantity });
            fetchProducts(); // C·∫≠p nh·∫≠t danh s√°ch s·∫£n ph·∫©m sau khi nh·∫≠p h√†ng
        } catch (err) {
            setError("L·ªói khi nh·∫≠p h√†ng");
        } finally {
            setLoading(false);
        }
    };

    return (
        <div className="p-4 max-w-xl mx-auto">
            <h1 className="text-2xl font-bold mb-4 text-center">Qu·∫£n l√Ω Kho</h1>

            {error && <p className="text-red-500">{error}</p>}
            {loading && <p className="text-blue-500">ƒêang t·∫£i...</p>}

            {/* Dropdown ch·ªçn s·∫£n ph·∫©m */}
            <select
                value={productId}
                onChange={(e) => setProductId(e.target.value)}
                className="border p-2 w-full mb-2"
            >
                <option value="">Ch·ªçn s·∫£n ph·∫©m</option>
                {products.map((product) => (
                    <option key={product._id} value={product._id}>
                        {product.name}
                    </option>
                ))}
            </select>

            <input
                type="number"
                placeholder="Nh·∫≠p s·ªë l∆∞·ª£ng"
                value={quantity}
                onChange={(e) => setQuantity(Number(e.target.value))}
                className="border p-2 w-full mb-2"
            />

            <div className="flex flex-wrap gap-2">
                <button onClick={checkStock} className="bg-blue-500 text-white p-2 w-1/2">Ki·ªÉm tra t·ªìn kho</button>
                <button onClick={handleImportStock} className="bg-green-500 text-white p-2 w-1/2">Nh·∫≠p h√†ng</button>
            </div>

            {stockInfo && (
                <div className="mt-4 p-2 border">
                    <p><strong>T·ªìn kho:</strong> {stockInfo.quantity} s·∫£n ph·∫©m</p>
                    {!stockInfo.inStock && <p className="text-red-500">‚ö† H·∫øt h√†ng</p>}
                </div>
            )}

            {/* üî• Danh s√°ch to√†n b·ªô s·∫£n ph·∫©m */}
            <h2 className="text-xl font-bold mt-4">Danh s√°ch s·∫£n ph·∫©m</h2>
            <ul className="border p-2">
                {products.map((product) => (
                    <li key={product._id} className="border-b p-1">
                        <span className="font-bold">{product.name}</span> - {product.stock} s·∫£n ph·∫©m trong kho
                        {product.stock < 10 && <span className="text-red-500 ml-2">‚ö† C·∫£nh b√°o: T·ªìn kho th·∫•p</span>}
                    </li>
                ))}
            </ul>
        </div>
    );
}
