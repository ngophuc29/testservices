const ProductModel = require("../models/ProductModel");

async function updateProduct(req, res) {
    try {
        const productId = req.params.id;
        let updateData = req.body;

        if (!updateData || Object.keys(updateData).length === 0) {
            return res.status(400).json({ message: "‚ùå D·ªØ li·ªáu c·∫≠p nh·∫≠t kh√¥ng h·ª£p l·ªá" });
        }

        // Ki·ªÉm tra n·∫øu c√≥ `details` ho·∫∑c `color` nh∆∞ng kh√¥ng ph·∫£i m·∫£ng th√¨ √©p ki·ªÉu
        if (updateData.details && !Array.isArray(updateData.details)) {
            updateData.details = [];
        }
        if (updateData.color && !Array.isArray(updateData.color)) {
            updateData.color = [];
        }

        console.log("üîÑ Updating Product ID:", productId);
        console.log("üì¶ Update Data:", updateData);

        const updatedProduct = await ProductModel.findByIdAndUpdate(
            productId,
            { $set: updateData },
            { new: true, runValidators: true }
        );

        if (!updatedProduct) {
            return res.status(404).json({ message: "‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m" });
        }

        res.status(200).json({
            message: "‚úÖ C·∫≠p nh·∫≠t s·∫£n ph·∫©m th√†nh c√¥ng!",
            data: updatedProduct
        });
    } catch (error) {
        console.error("üö® L·ªói khi c·∫≠p nh·∫≠t s·∫£n ph·∫©m:", error);
        res.status(500).json({ message: "‚ùå L·ªói server khi c·∫≠p nh·∫≠t s·∫£n ph·∫©m", error: error.message });
    }
}

module.exports = updateProduct;
